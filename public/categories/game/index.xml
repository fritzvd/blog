<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Game on fritzvd</title>
    <link>http://blog.fritzvd.com/categories/game/</link>
    <description>Recent content in Game on fritzvd</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 May 2015 15:35:39 +0000</lastBuildDate>
    <atom:link href="http://blog.fritzvd.com/categories/game/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>FBX and 3d models in Monogame &amp;#8211; on Linux</title>
      <link>http://blog.fritzvd.com/2015/05/19/fbx-and-3d-models-in-monogame-on-linux/</link>
      <pubDate>Tue, 19 May 2015 15:35:39 +0000</pubDate>
      
      <guid>http://blog.fritzvd.com/2015/05/19/fbx-and-3d-models-in-monogame-on-linux/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;TL;DR the monogame community is pretty great&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lately my manic ambitious mode has turned on again for me. So I have about 100s of ideas again, which sadly of course will all come to nothing. But while I&amp;#8217;m at it, I thought I&amp;#8217;d make the best of it to do some tutorials here and there and learn some stuff I know nothing about.&lt;/p&gt;

&lt;p&gt;Starting with Monogame on Linux is kind of a hassle to start with, but if you push through it works. At the time of writing this I got Monogame 3.4 to work: &lt;a href=&#34;http://www.monogame.net/downloads/&#34; target=&#34;_blank&#34;&gt;Monogame Downloads Page&lt;/a&gt;. If you&amp;#8217;re not very comfortable with&lt;/p&gt;

&lt;p&gt;The real problem was that a tutorial I tried to follow had an old style FBX file that the Monogame Content Pipeline was not willing to load. Everyone told me to use &lt;a href=&#34;http://www.blender.org/download/&#34; target=&#34;_blank&#34;&gt;Blender&lt;/a&gt; to convert it. But.. Blender wasn&amp;#8217;t loading my file, because it was ASCII based. So I had to find a converter. I found the Autodesk one for Linux somewhere in the attic of the internet. I&amp;#8217;ll host it &lt;a href=&#34;http://meuk.technokrat.nl/fbx_converter&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; so I know for sure it won&amp;#8217;t go missing. So install that thing, and convert it (if necessary import and export in Blender too, just to make sure). Your Content Pipeline will thank you.&lt;/p&gt;

&lt;p&gt;P.S. you can find some great free models here: &lt;a href=&#34;http://tf3dm.com/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://tf3dm.com/&#34;&gt;http://tf3dm.com/&lt;/a&gt;&lt;/a&gt;. &lt;a href=&#34;http://tf3dm.com/3d-model/puo-67895.html&#34; target=&#34;_blank&#34;&gt;The featured image is a model made by 3dgenerator: &lt;a href=&#34;http://tf3dm.com/3d-model/puo-67895.html&#34;&gt;http://tf3dm.com/3d-model/puo-67895.html&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Procedural Death Jam, 7 Day Rogue Like, Cyberpunk Game jamathon.</title>
      <link>http://blog.fritzvd.com/2014/03/08/procedural-death-jam-7-day-rogue-like-cyberpunk-game-jamathon/</link>
      <pubDate>Sat, 08 Mar 2014 15:09:25 +0000</pubDate>
      
      <guid>http://blog.fritzvd.com/2014/03/08/procedural-death-jam-7-day-rogue-like-cyberpunk-game-jamathon/</guid>
      <description>&lt;p&gt;Ok. It&amp;#8217;s official as of 16.04 (CET) I have entered in all of the above mentioned GameJams. This is where I will track my development.&lt;/p&gt;

&lt;p&gt;The project can be found at: &lt;a href=&#34;https://github.com/fritzvd/abime&#34; title=&#34;abime&#34;&gt;https://github.com/fritzvd/abime&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It. Is. On!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Note to self: Neko target in Haxe does not handle placement of BitmapData well. Been spending an hour to get it to work. Other target was instant.&lt;/p&gt;

&lt;p&gt;&lt;strong Update 2: &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This was a very bad week to be working on something like this. Next time I&amp;#8217;ll clear my schedule. This was doomed to fail from the beginning. Lessons learned include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;got familiar with LÃ¶ve2D&lt;/li&gt;
&lt;li&gt;got more familiar with HaxePunk&lt;/li&gt;
&lt;li&gt;learned about ray casting&lt;/li&gt;
&lt;li&gt;made some math mistakes&lt;/li&gt;
&lt;li&gt;learned to free my schedule&lt;/li&gt;
&lt;li&gt;deal with failure&lt;/li&gt;
&lt;li&gt;great communities that make awesome games&lt;/li&gt;
&lt;li&gt;lower the bar&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Particle Emitter in HaxePunk</title>
      <link>http://blog.fritzvd.com/2014/03/04/particle-emitter-in-haxepunk/</link>
      <pubDate>Tue, 04 Mar 2014 14:34:54 +0000</pubDate>
      
      <guid>http://blog.fritzvd.com/2014/03/04/particle-emitter-in-haxepunk/</guid>
      <description>&lt;p&gt;For some this will be a trivial example. For me this took a bit longer than I suspected.&lt;/p&gt;

&lt;p&gt;This small example will produce this:&lt;/p&gt;

&lt;p&gt;If you&amp;#8217;re planning on making an awesome game you probably want a particle emitter. because.. well look at it.&lt;/p&gt;

&lt;p&gt;What I did is I started a haxepunk project:&lt;/p&gt;

&lt;p&gt;`For some this will be a trivial example. For me this took a bit longer than I suspected.&lt;/p&gt;

&lt;p&gt;This small example will produce this:&lt;/p&gt;

&lt;p&gt;If you&amp;#8217;re planning on making an awesome game you probably want a particle emitter. because.. well look at it.&lt;/p&gt;

&lt;p&gt;What I did is I started a haxepunk project:&lt;/p&gt;

&lt;p&gt;`&lt;/p&gt;

&lt;p&gt;And added a file: &lt;a href=&#34;https://github.com/fritzvd/haxepunk-emitter-example/blob/master/src/Explosion.hx&#34; title=&#34;Explosion.hx&#34; target=&#34;_blank&#34;&gt;Explosion.hx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Emitter is also a type of Entity, and also needs a graphic. It looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;syntax actionscript&#34;&gt;import com.haxepunk.graphics.Emitter;
import com.haxepunk.utils.Ease;
import com.haxepunk.Entity;

class Explosion extends Entity
{
    private var _emitter:Emitter;

    public function new()
    {
        super(x, y);
        _emitter = new Emitter(&#34;graphics/particle.png&#34;, 4, 4);
        _emitter.newType(&#34;explode&#34;, [0]);
        _emitter.setMotion(&#34;explode&#34;,       // name
                    0,              // angle
                    100,            // distance
                    2,              // duration
                    360,            // ? angle range
                    -40,            // ? distance range
                    1,              // ? Duration range
                    Ease.quadOut    // ? Easing 
                    );
        _emitter.setAlpha(&#34;explode&#34;, 20, 0.1);
        _emitter.setGravity(&#34;explode&#34;, 5, 1);
        graphic = _emitter;
        layer = -1;
    }

    public function explode(x:Float, y:Float)
    {
        for (i in 0...20)
        {
            _emitter.emit(&#34;explode&#34;, x, y);
        }
    }


}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then you can add the Emitter to your current scene like in my &lt;a href=&#34;https://github.com/fritzvd/haxepunk-emitter-example/blob/master/src/MainScene.hx&#34; title=&#34;MainScene.hx&#34; target=&#34;_blank&#34;&gt;MainScene.hx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;syntax actionscript&#34;&gt;import com.haxepunk.Scene;
import Explosion;

class MainScene extends Scene
{
    private var explosion:Explosion;

    public override function begin()
    {
        explosion = new Explosion();
        add(explosion);
    }

    public override function update()
    {
        super.update();
        explosion.explode(230, 240);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now run&lt;/p&gt;

&lt;p&gt;&lt;code&gt;lime test neko&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And you should see something similar to the emitter above.&lt;/p&gt;

&lt;p&gt;You can checkout my &lt;a href=&#34;https://github.com/fritzvd/haxepunk-emitter-example&#34; title=&#34;haxepunk-emitter-example&#34; target=&#34;_blank&#34;&gt;repo&lt;/a&gt; and run it to play around with it.&lt;/p&gt;

&lt;p&gt;I ran into this error below. It meant my sprite was too small. It took me a long time to realize that.&lt;/p&gt;

&lt;p&gt;``For some this will be a trivial example. For me this took a bit longer than I suspected.&lt;/p&gt;

&lt;p&gt;This small example will produce this:&lt;/p&gt;

&lt;p&gt;If you&amp;#8217;re planning on making an awesome game you probably want a particle emitter. because.. well look at it.&lt;/p&gt;

&lt;p&gt;What I did is I started a haxepunk project:&lt;/p&gt;

&lt;p&gt;`For some this will be a trivial example. For me this took a bit longer than I suspected.&lt;/p&gt;

&lt;p&gt;This small example will produce this:&lt;/p&gt;

&lt;p&gt;If you&amp;#8217;re planning on making an awesome game you probably want a particle emitter. because.. well look at it.&lt;/p&gt;

&lt;p&gt;What I did is I started a haxepunk project:&lt;/p&gt;

&lt;p&gt;`&lt;/p&gt;

&lt;p&gt;And added a file: &lt;a href=&#34;https://github.com/fritzvd/haxepunk-emitter-example/blob/master/src/Explosion.hx&#34; title=&#34;Explosion.hx&#34; target=&#34;_blank&#34;&gt;Explosion.hx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Emitter is also a type of Entity, and also needs a graphic. It looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;syntax actionscript&#34;&gt;import com.haxepunk.graphics.Emitter;
import com.haxepunk.utils.Ease;
import com.haxepunk.Entity;

class Explosion extends Entity
{
    private var _emitter:Emitter;

    public function new()
    {
        super(x, y);
        _emitter = new Emitter(&#34;graphics/particle.png&#34;, 4, 4);
        _emitter.newType(&#34;explode&#34;, [0]);
        _emitter.setMotion(&#34;explode&#34;,       // name
                    0,              // angle
                    100,            // distance
                    2,              // duration
                    360,            // ? angle range
                    -40,            // ? distance range
                    1,              // ? Duration range
                    Ease.quadOut    // ? Easing 
                    );
        _emitter.setAlpha(&#34;explode&#34;, 20, 0.1);
        _emitter.setGravity(&#34;explode&#34;, 5, 1);
        graphic = _emitter;
        layer = -1;
    }

    public function explode(x:Float, y:Float)
    {
        for (i in 0...20)
        {
            _emitter.emit(&#34;explode&#34;, x, y);
        }
    }


}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then you can add the Emitter to your current scene like in my &lt;a href=&#34;https://github.com/fritzvd/haxepunk-emitter-example/blob/master/src/MainScene.hx&#34; title=&#34;MainScene.hx&#34; target=&#34;_blank&#34;&gt;MainScene.hx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;syntax actionscript&#34;&gt;import com.haxepunk.Scene;
import Explosion;

class MainScene extends Scene
{
    private var explosion:Explosion;

    public override function begin()
    {
        explosion = new Explosion();
        add(explosion);
    }

    public override function update()
    {
        super.update();
        explosion.explode(230, 240);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now run&lt;/p&gt;

&lt;p&gt;&lt;code&gt;lime test neko&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And you should see something similar to the emitter above.&lt;/p&gt;

&lt;p&gt;You can checkout my &lt;a href=&#34;https://github.com/fritzvd/haxepunk-emitter-example&#34; title=&#34;haxepunk-emitter-example&#34; target=&#34;_blank&#34;&gt;repo&lt;/a&gt; and run it to play around with it.&lt;/p&gt;

&lt;p&gt;I ran into this error below. It meant my sprite was too small. It took me a long time to realize that.&lt;/p&gt;

&lt;p&gt;``&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Nyko Playpad Pro or * as Xbox 360 controller on linux</title>
      <link>http://blog.fritzvd.com/2014/03/02/nyko-playpad-pro-as-xbox-360-controller/</link>
      <pubDate>Sun, 02 Mar 2014 19:15:06 +0000</pubDate>
      
      <guid>http://blog.fritzvd.com/2014/03/02/nyko-playpad-pro-as-xbox-360-controller/</guid>
      <description>&lt;p&gt;This is basically a fancy note to self. Last year in my pre vacation spending spree, I boughy myself (and my brother) a &lt;a href=&#34;http://www.nyko.com/products/product-detail/?name=PlayPad+Pro&#34; title=&#34;nyko&#34; target=&#34;_blank&#34;&gt;NYKO Playpad Pro.&lt;/a&gt; A pretty cool gamepad for Android. I had lots of fun playing GTA Vice CIty on my trip to Italy. Playing SNES games etc.&lt;/p&gt;

&lt;p&gt;However I tried to hook it up to my Linux pc and thought I would be able to use it with my new go to MetroidVania platformer: &lt;a href=&#34;http://guacamelee.com/&#34; title=&#34;guacamelee&#34; target=&#34;_blank&#34;&gt;Guacamelee&lt;/a&gt;. Especially with Co-Op because I only have one Xbox 360 controller. In comes &lt;a href=&#34;http://pingus.seul.org/~grumbel/xboxdrv/&#34; title=&#34;xboxdrv&#34; target=&#34;_blank&#34;&gt;xboxdrv&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Basically I need to enter this into my terminal and it runs (be sure to install 0.8.5 version (and up I guess) of xboxdrv)&lt;/p&gt;

&lt;p&gt;Of course depending on what input event devices it is mapped to.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;syntax bash&#34;&gt;sudo xboxdrv --evdev /dev/input/event13 --evdev-absmap ABS_X=x1,ABS_Y=y1,ABS_GAS=RT,ABS_BRAKE=LT,ABS_Z=X2,ABS_RZ=y2 --evdev-keymap BTN_A=A,BTN_B=b,BTN_X=x,BTN_Y=y,BTN_START=start,BTN_SELECT=back,BTN_THUMBL=tl,BTN_THUMBR=tr,BTN_TL=LB,BTN_TR=RB

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Starting Game Development with HaxePunk instead of MonoGame/XNA</title>
      <link>http://blog.fritzvd.com/2014/01/06/starting-game-development-with-haxepunk-instead-of-monogamexna/</link>
      <pubDate>Mon, 06 Jan 2014 20:25:23 +0000</pubDate>
      
      <guid>http://blog.fritzvd.com/2014/01/06/starting-game-development-with-haxepunk-instead-of-monogamexna/</guid>
      <description>

&lt;p&gt;So I started venturing off in a direction in which I have no experience what so ever. Only on the consumer-side of things ;-). Game development. Of course I had no idea what I was doing. Still don&amp;#8217;t.&lt;/p&gt;

&lt;p&gt;To start with I had no idea where to start. Lately I have been looking into Unity 3D and Unreal engine, but then I realized I suck at drawing and have no idea how to start with 3d. So then I was searching around for 2d engines and started out with Cocos2D-x and some other C++ based engines (can&amp;#8217;t remember which), but that was kind of a hassle to get started and my builds would not run on my phone. Also I did not really get there style of documentation.&lt;/p&gt;

&lt;h3 id=&#34;monogame:bbecd484d96d2baba19ac01746a2dcc1&#34;&gt;MonoGame&lt;/h3&gt;

&lt;p&gt;After looking through tutorials and stuff, I settled on the XNA framework, or at least the open source version &amp;#8211;&amp;gt; &lt;a title=&#34;monogame&#34; href=&#34;http://monogame.net/&#34; target=&#34;_blank&#34;&gt;MonoGame&lt;/a&gt;. It is pretty awesome, some of the most legendary indie games: &lt;a title=&#34;Supergiant games&#34; href=&#34;http://supergiantgames.com/index.php/media/&#34; target=&#34;_blank&#34;&gt;Bastion&lt;/a&gt;, &lt;a title=&#34;Fez&#34; href=&#34;http://fezgame.com/&#34; target=&#34;_blank&#34;&gt;FEZ&lt;/a&gt; and &lt;a title=&#34;smb&#34; href=&#34;http://supermeatboy.com/&#34; target=&#34;_blank&#34;&gt;Super Meat Boy&lt;/a&gt; are created with the closed source variant. Which for me was reason enough to find out more. Moreover the Bastion team (supergiant games) used MonoGame to port it to the iPad/iPhone.&lt;/p&gt;

&lt;p&gt;So starting out with some tutorials I was making quite some headway in a short amount of time. C# is a very approachable language and MonoDevelop a lightweight IDE. Especially after trying out the badly indented (illegible) examples I found of all these different C++ libraries.&lt;/p&gt;

&lt;p&gt;After having a first version that featured some smooth running sprites I thought it interesting to test the performance in an iPad simulator. The built worked well on Linux and on the Mac Desktop, but building it for iOS gave me some problems. BECAUSE YOU CAN&amp;#8217;T. Not for free anyways. Xamarin charges you $299,- a year for you to be able to build for Android and iOS.&lt;/p&gt;

&lt;h3 id=&#34;haxe-and-openfl:bbecd484d96d2baba19ac01746a2dcc1&#34;&gt;Haxe and OpenFL&lt;/h3&gt;

&lt;p&gt;I was pretty disheartened, because I remembered all the hassle and strange examples I found with the plethora of frameworks I tried out before and did not really want to go back to that. On some website I found an article on &lt;a href=&#34;http://openfl.org/&#34; title=&#34;openfl&#34; target=&#34;_blank&#34;&gt;OpenFL&lt;/a&gt; an open source flash framework that compiles to *. HTML5, windows, mac, linux, android, ios, blackberry, tizen. You name it. Also used to make this little gem: &lt;a href=&#34;http://rymdkapsel.com/&#34; title=&#34;rymdkapsel&#34; target=&#34;_blank&#34;&gt;rymdkapsel&lt;/a&gt; A port of FlashPunk in Haxe &lt;a href=&#34;http://haxepunk.com/&#34; title=&#34;HaxePunk&#34; target=&#34;_blank&#34;&gt;HaxePunk&lt;/a&gt; had some proper tutorials, it is maintained and was ported chiefly by&lt;a href=&#34;http://matttuttle.com/&#34; title=&#34;Matt Tuttle&#34; target=&#34;_blank&#34;&gt;Matt Tuttle&lt;/a&gt;. (thanks for that).&lt;/p&gt;

&lt;p&gt;The setup of OpenFL and haxepunk is very easy and straightforward and I am easily building to all the promissed targets. I can test my ios builds in the simulator on my Mac and send *.swf links to friends and invite alpa-testers for my Android APK&amp;#8217;s. It is awesome.&lt;/p&gt;

&lt;p&gt;For those to lazy to open the links and find out how easy it really is do this:&lt;/p&gt;

&lt;p&gt;`So I started venturing off in a direction in which I have no experience what so ever. Only on the consumer-side of things ;-). Game development. Of course I had no idea what I was doing. Still don&amp;#8217;t.&lt;/p&gt;

&lt;p&gt;To start with I had no idea where to start. Lately I have been looking into Unity 3D and Unreal engine, but then I realized I suck at drawing and have no idea how to start with 3d. So then I was searching around for 2d engines and started out with Cocos2D-x and some other C++ based engines (can&amp;#8217;t remember which), but that was kind of a hassle to get started and my builds would not run on my phone. Also I did not really get there style of documentation.&lt;/p&gt;

&lt;h3 id=&#34;monogame-1:bbecd484d96d2baba19ac01746a2dcc1&#34;&gt;MonoGame&lt;/h3&gt;

&lt;p&gt;After looking through tutorials and stuff, I settled on the XNA framework, or at least the open source version &amp;#8211;&amp;gt; &lt;a title=&#34;monogame&#34; href=&#34;http://monogame.net/&#34; target=&#34;_blank&#34;&gt;MonoGame&lt;/a&gt;. It is pretty awesome, some of the most legendary indie games: &lt;a title=&#34;Supergiant games&#34; href=&#34;http://supergiantgames.com/index.php/media/&#34; target=&#34;_blank&#34;&gt;Bastion&lt;/a&gt;, &lt;a title=&#34;Fez&#34; href=&#34;http://fezgame.com/&#34; target=&#34;_blank&#34;&gt;FEZ&lt;/a&gt; and &lt;a title=&#34;smb&#34; href=&#34;http://supermeatboy.com/&#34; target=&#34;_blank&#34;&gt;Super Meat Boy&lt;/a&gt; are created with the closed source variant. Which for me was reason enough to find out more. Moreover the Bastion team (supergiant games) used MonoGame to port it to the iPad/iPhone.&lt;/p&gt;

&lt;p&gt;So starting out with some tutorials I was making quite some headway in a short amount of time. C# is a very approachable language and MonoDevelop a lightweight IDE. Especially after trying out the badly indented (illegible) examples I found of all these different C++ libraries.&lt;/p&gt;

&lt;p&gt;After having a first version that featured some smooth running sprites I thought it interesting to test the performance in an iPad simulator. The built worked well on Linux and on the Mac Desktop, but building it for iOS gave me some problems. BECAUSE YOU CAN&amp;#8217;T. Not for free anyways. Xamarin charges you $299,- a year for you to be able to build for Android and iOS.&lt;/p&gt;

&lt;h3 id=&#34;haxe-and-openfl-1:bbecd484d96d2baba19ac01746a2dcc1&#34;&gt;Haxe and OpenFL&lt;/h3&gt;

&lt;p&gt;I was pretty disheartened, because I remembered all the hassle and strange examples I found with the plethora of frameworks I tried out before and did not really want to go back to that. On some website I found an article on &lt;a href=&#34;http://openfl.org/&#34; title=&#34;openfl&#34; target=&#34;_blank&#34;&gt;OpenFL&lt;/a&gt; an open source flash framework that compiles to *. HTML5, windows, mac, linux, android, ios, blackberry, tizen. You name it. Also used to make this little gem: &lt;a href=&#34;http://rymdkapsel.com/&#34; title=&#34;rymdkapsel&#34; target=&#34;_blank&#34;&gt;rymdkapsel&lt;/a&gt; A port of FlashPunk in Haxe &lt;a href=&#34;http://haxepunk.com/&#34; title=&#34;HaxePunk&#34; target=&#34;_blank&#34;&gt;HaxePunk&lt;/a&gt; had some proper tutorials, it is maintained and was ported chiefly by&lt;a href=&#34;http://matttuttle.com/&#34; title=&#34;Matt Tuttle&#34; target=&#34;_blank&#34;&gt;Matt Tuttle&lt;/a&gt;. (thanks for that).&lt;/p&gt;

&lt;p&gt;The setup of OpenFL and haxepunk is very easy and straightforward and I am easily building to all the promissed targets. I can test my ios builds in the simulator on my Mac and send *.swf links to friends and invite alpa-testers for my Android APK&amp;#8217;s. It is awesome.&lt;/p&gt;

&lt;p&gt;For those to lazy to open the links and find out how easy it really is do this:&lt;/p&gt;

&lt;p&gt;`&lt;/p&gt;

&lt;p&gt;Now you can start being aweswome and build your crazy ideas for android.&lt;/p&gt;

&lt;p&gt;(Next time I&amp;#8217;ll give some code excerpts and a flash file to test out).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve written a follow up on &lt;a href=&#34;http://blog.technokrat.nl/?p=522&#34; title=&#34;Particle Emitters&#34; target=&#34;_blank&#34;&gt;particle emitters in haxepunk&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>